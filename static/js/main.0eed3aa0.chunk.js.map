{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/noteReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","console","log","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","noteSnap","notes","forEach","snapChild","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getSate","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","FinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","error","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","className","moment","date","format","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","getState","delete","startDeleting","NothingSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","args","props","PublicRoute","rest","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0eed3aa0.chunk.js","sourcesContent":["import firebase from 'firebase/app' ;\nimport   'firebase/firestore' ;\nimport   'firebase/auth' ;\n\n   \n\n  // Your web app's Firebase configuration\n\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n    firebase.initializeApp(firebaseConfig);\n  \n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }","\n\nexport const types = {\n    login: '[Auth] Login' ,\n    logout: '[Auth] Logout' ,\n\n    uiSetError: '[UI] Set Error' ,\n    uiRemoveError: '[UI] Remove Error' ,\n\n    uiStartLoading: '[UI] Start loading' ,\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',  \n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutClean: '[Notes] Loguot Cleaning',    \n}","export const fileUpload = async (file) => {\n    try {\n        console.log('mock');\n        const cloudUrl = 'https://api.cloudinary.com/v1_1/dhklxujxz/upload'\n        const formData = new FormData();\n        formData.append('upload_preset', 'react-journal');\n        formData.append('file', file);\n        // return url de la imagen\n\n        const resp = await fetch( cloudUrl, {\n            method:'POST' ,\n            body: formData\n        }) ;\n        if(resp.ok) {\n            const cloudResp = await resp.json() ;\n            return cloudResp.secure_url ;\n        } else {\n            return null \n        }\n    } catch (error) {\n        throw error ;\n    }\n}","import { db } from \"../firebase/firebaseConfig\"\n\nexport const loadNotes =  async(uid) => {\n  const noteSnap =  await db.collection(`${uid}/Journal/notes`).get();\n  const notes = [];\n\n  noteSnap.forEach(snapChild => {\n      notes.push({\n        id: snapChild.id ,\n        ...snapChild.data()         \n        });\n  } )\n\n    return notes ;\n}","import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebaseConfig\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n//react-journal\n\nexport const startNewNote = () => {\n    return async (dispatch, getSate) => {\n        const { uid } = getSate().auth;       \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n        const doc = await db.collection(`${uid}/Journal/notes`).add(newNote);\n        dispatch(activeNote(doc.id, newNote));\n        dispatch(addNewNote(doc.id,newNote));\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id,note) => ({\n    type: types.notesAddNew ,\n    payload: {\n        id ,\n        ...note\n    }\n\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n}\n\nexport const setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = (note) => {\n\n    return async (dispatch, getSate) => {\n        const { uid } = getSate().auth;\n        if (!note.url) {\n            delete note.url\n        }\n        const noteToFireStore = { ...note };\n        delete noteToFireStore.id;\n        await db.doc(`${uid}/Journal/notes/${note.id}`).update(noteToFireStore);\n        dispatch(refreshNote(note.id, noteToFireStore));\n    \n        Swal.fire('Saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n    return async (dispatch, getSate) => {\n        const { active: activeNote } = getSate().notes;\n        console.log(getSate().notes);\n        console.log(file);\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n        dispatch(startSaveNote(activeNote));\n        Swal.close();\n    }\n}\n\nexport const startDeleting = (id) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().auth;\n        await db.doc(`${uid}/Journal/notes/${id}`).delete();\n        dispatch( deleteNote(id));\n\n        Swal.fire('Deleted', 'Note Deleted', 'success');\n\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: {\n        id\n    }\n\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutClean\n})\n","import { types } from \"../types/types\";\n\nexport const setError = (err) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const RemoveError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const StartLoading = () => ({\n    type:types.uiStartLoading,\n});\n\nexport const FinishLoading = () => ({\n    type:types.uiFinishLoading, \n});","import Swal from 'sweetalert2';\nimport {firebase, googleAuthProvider} from '../firebase/firebaseConfig' ;\nimport { types } from \"../types/types\"\nimport { noteLogout } from './notes';\nimport { FinishLoading, StartLoading } from './ui';\n\nexport const startLoginEmailPassword = (email,password) => {\n    return (dispatch) => {\n        dispatch(StartLoading());\n        firebase.auth().signInWithEmailAndPassword(email,password)\n        .then (({user}) => { \n              \n              dispatch(login(user.uid,user.displayName));\n              dispatch(FinishLoading()); \n         })\n         .catch(error => {\n            dispatch(FinishLoading());\n            Swal.fire('Error',error.message,'error');\n             })\n             \n              \n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email,password,name) => {\n    \n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email,password)\n        .then (async({user}) => {\n           await user.updateProfile({displayName:name});\n             console.log(user); \n             dispatch(login(user.uid,user.displayName)); \n        })\n        .catch(error =>  Swal.fire('Error',error.message,'error') );\n}}\n\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup( googleAuthProvider)\n            .then (({user}) => {\n                \n                dispatch(login(user.uid,user.displayName));\n            })\n    }\n}\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n});\n\nexport const startLogout = () => {\n    return async(dispatch ) => {\n       await firebase.auth().signOut();\n       dispatch(logout());\n       dispatch(noteLogout());  \n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n})\n\n","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {}) => {\n  \n    const [values, setValues] = useState(initialState) ;\n    const reset = ( newFormState = initialState ) => {\n        setValues(newFormState);\n    }\n    const handleInputChange = ({target}) => {\n        setValues( {\n            ...values ,\n             [target.name] : target.value\n        })\n    }\n\n    return [ values, handleInputChange,reset] ;\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\nimport moment from 'moment';\nimport 'moment/locale/es';\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector(state => state.notes);\n  const handleSave = () => {\n      dispatch(startSaveNote(note));\n  }\n  const handleUpload = () => {\n    document.querySelector('#fileSelector').click();  \n  }\n\n  const handleFileChange = (e) => {\n   const file = e.target.files[0];\n   if(file) {\n     dispatch(startUploading(file));\n   }\n  }\n  return (\n    <div className=\"notes__appbar\">\n      <span> {moment(note.date).format('dddd, LL')}</span>\n       <input \n         id = \"fileSelector\"\n         type=\"file\"\n         name = \"file\"\n         style = {{display: 'none' }}\n         onChange = { handleFileChange }\n       />\n      <div>\n        <button \n        className=\"btn\"\n        onClick = { handleUpload }\n        >\n          Picture\n        </button>\n\n        <button \n        className=\"btn\"\n        onClick = {handleSave}\n        >\n          Save</button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activeNote, startDeleting } from \"../../actions/notes\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector(state => state.notes);\n  const [formValues, handleInputChange,reset] = useForm(note);\n  const { body, title ,id} = formValues ;  \n  const activeId  = useRef(note.id) ;\n  useEffect(() => {\n      if(activeId.current !== note.id) {\n        reset(note);\n        activeId.current = note.id\n      }\n  }, [note,reset]) ;\n  \n  useEffect(() => {\n   dispatch(activeNote(formValues.id,{...formValues}))\n  }, [dispatch,formValues]) ;\n\n  const handleDelete = () => {\n      dispatch( startDeleting(id));\n  }\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n      <div className=\"notes_content\">\n        <input\n          type=\"text\"\n          placeholder=\"Some awesome title\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n          value={title}\n          name = \"title\"\n          onChange={handleInputChange }\n        />\n        <textarea\n          placeholder=\"what do you do today\"\n          className=\"notes__textarea\"\n          name = \"body\"\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n        {\n          note.url &&\n          <div className=\"notes__image\">\n            <img\n              src = {note.url}\n              alt=\"imagen\"\n            />\n          </div>\n        }\n      </div>\n      <button\n       className = \"btn btn-danger\"\n       onClick = { handleDelete }\n      > \n        Delete Entry</button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const NothingSelected = () => {\n  return (\n    <div className=\"nothing_main-content\">\n      <p>\n        Select something <br />\n        or create an entry!\n      </p>\n      <i className=\"far fa-star fa-4x mt-5\"></i>\n    </div>\n  );\n};\n","import React from \"react\";\nimport moment from 'moment' ;\nimport { useDispatch } from \"react-redux\";\nimport { activeNote } from \"../../actions/notes\";\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n  const noteDate = moment(date);\n  const dispatch = useDispatch();\n  const handleEntryClick = () => {\n      dispatch(activeNote(id,{title,body,date,url}));\n  }\n  return (\n    <div className=\"journal__entry pointer animate__animated animate__fadeIn\"\n      onClick = { handleEntryClick }\n    >\n      {  url &&\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      }\n      <div className=\"journal__entry-body\">\n        <p className=\"jouranl_entry-title\">{title}</p>\n        <p className=\"jouranl_entry-content\">{body}</p>\n      </div>\n\n      <div className=\"journal__entry-date-box\">\n        <span>{noteDate.format('dddd')}</span>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry'\n\nexport const JournalEntries = () => {\n   \n    const {notes} = useSelector(state => state.notes);\n   \n    return (\n     \n        <div className = \"journal__entries\">\n            {\n                notes.map( note => (\n                    <JournalEntry \n                    key = {note.id} \n                    {...note}                    \n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleAddEntry = () => {\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n            className=\"journal__new-entry \"\n            onClick = { handleAddEntry }\n            >\n                <i className=\"far fa-calendar-plus fa-3x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n            <JournalEntries />\n        </aside>\n    )\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NoteScreen } from \"../notes/NoteScreen\";\nimport { NothingSelected } from \"./NothingSelected\";\nimport { Sidebar } from \"./Sidebar\";\n\nexport const JournalScreen = () => {\n  const { active } = useSelector(state => state.notes)\n  return (\n    <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n      <Sidebar />\n\n      <main>\n        {\n          (active)\n            ? (<NoteScreen />)\n            : (<NothingSelected />)\n        }\n\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport {useDispatch, useSelector } from 'react-redux'\nimport { Link } from \"react-router-dom\";\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui);   \n      const [formValues,handleInputChange] = useForm({\n        email: 'jorge1@gmail.com' ,\n        password: '123456'\n    });\n    const {email,password} = formValues ;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email,password));\n    }\n\n    const handleGoogleLogin = () => {   \n        dispatch(startGoogleLogin());\n    }\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n            <form \n                onSubmit = { handleLogin }\n                className = 'animate__animated animate__fadeIn animate__faster'\n            >\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    placeholder=\"email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    value= {email}\n                    onChange = { handleInputChange }   \n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value= {password}\n                    onChange = { handleInputChange }                   \n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled = { loading }\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick = {handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link \n                to=\"/auth/register\"\n                className = \"link\"\n                >\n                    Create new account\n                    </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport validator from 'validator'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport { setError, RemoveError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const RegisterScreen = () => {\n    const dispatch = useDispatch();\n    const {  msgError } = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Jorge Iturrieta',\n        email: 'jorge.10.iturrieta@gmail.com',\n        password: 123456,\n        password2: 123456,\n    });\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n           dispatch(startRegisterWithEmailPasswordName(email,password,name));  \n        }\n    }\n    const isFormValid = () => {\n        if (name.trim().length === 0) {\n            // console.log('Name is required')\n            dispatch(setError('Name is required'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            //console.log('Email is not valid')\n            dispatch(setError('Email is not valid'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            // console.log('Password should be at least 6 character and match each other');\n            dispatch(setError('Password should be at least 6 character and match each other'));\n            return false;\n        }\n        dispatch(RemoveError());\n        return true\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n            <form \n            onSubmit={handleRegister}\n            className = 'animate__animated animate__fadeIn animate__faster'\n            >\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                    value={name}\n                />\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    value={email}\n                    onChange={handleInputChange}\n\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                    value={password}\n\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n\n                >\n                    Register\n                </button>\n\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport {\n    Switch,\n    Route,\n   Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\n                    <Route exact path=\"/auth/register\" component={RegisterScreen}/>\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...args\n}) => {\n    \n    //localStorage.setItem(\"lastPath\", args.location.pathname);\n  return (\n      \n    <Route\n      {...args}\n      component={(props) =>       \n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> :  <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import firebase from 'firebase/app';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch\n} from \"react-router-dom\";\nimport { login } from '../actions/auth';\nimport { startLoadingNotes } from '../actions/notes';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async(user) => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));                \n                dispatch(startLoadingNotes(user.uid));\n                setIsLoggedIn(true);\n             \n              \n            } else {\n                setIsLoggedIn(false);\n            }\n            setChecking(false);\n        })\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if (checking) {\n        return (\n            <h1>Please wait...</h1>\n        )\n    }\n    return (\n        <Router>\n            <div>\n\n                {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={isLoggedIn}\n                    />\n                    <PrivateRoute\n                        path=\"/\"\n                        component={JournalScreen}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n\n\n                    {/*       <Route \n                        path=\"/auth\" \n                        component = {AuthRouter} \n                    />\n                    <Route \n                        exact \n                        path=\"/\" \n                        component = {JournalScreen}\n                    />\n\n                    <Redirect to=\"/auth/login\" />  */}\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n/* \n    {\n        notes: [] ,\n        active: null,\n        active: {\n            id: 'sdfgdfhgh123asf'\n            title: ''\n            body: '' \n            imageUrl: ''\n            date: 2132355641 \n\n        }\n    }\n*/\nconst initialState = {\n    notes: [],\n    active: null,\n}\nexport const noteReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.notesActive:\n            return ({\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            })\n        case types.notesLoad:\n            return ({\n                ...state,\n                notes: action.payload\n\n            });\n\n        case types.notesUpdated:\n            return ({\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                      ? action.payload.note\n                      : note\n                )\n\n            })\n\n        case types.notesDelete :\n            return ({\n                ...state ,\n                active: null ,\n                notes: state.notes.filter( note => \n                        note.id !== action.payload.id\n                )\n            });\n        case types.notesLogoutClean :\n            return ({                \n                active: null ,\n                notes: [] \n            });\n\n        case types.notesAddNew :            \n        return ({                \n            active: null ,\n            notes: [ action.payload, ...state.notes] \n        });\n\n\n\n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            } \n        default:\n            return state;\n    }\n}","import {createStore,combineReducers, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { noteReducer } from '../reducers/noteReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth:authReducer ,\n    ui: uiReducer ,\n    notes : noteReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n        )\n);\n","import { types } from '../types/types';\n\n/* \n  {\n      uid: 132q4easfsdasd\n      name: jorge\n  }\n*/\nexport const authReducer = (state = {},action) => {\n    switch (action.type) {\n        case types.login:            \n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n            case types.logout:           \n            return { }\n\n        \n    \n        default:\n            return state;\n    }\n}\n  \n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport { AppRouter } from './routers/AppRouter' \nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n        <div>\n          <Provider store = { store }>\n             <AppRouter/>\n\n          </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\nReactDOM.render(\n    <JournalApp />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}